#
# INTERNAL SYSTEM STUFF
#

index:
    path:     /
    defaults: { _controller: AppBundle:Static:index }

login:
    path:     /login
    defaults: { _controller: AppBundle:Auth:login }

login_check:
    path:     /login/check

logout:
    path:     /logout

#
# CREW
#

people:
    path:     /crew
    defaults: { _controller: AppBundle:People:index }

permissions:
    path:     /crew/permissions
    defaults: { _controller: AppBundle:People:permissions }

addPerson:
    path:     /crew/new
    defaults: { _controller: AppBundle:People:new }

userSearch:
    path:     /crew/search
    methods:  [POST]
    defaults: { _controller: AppBundle:People:search }

viewPerson:
    path:     /crew/{steamID}
    defaults: { _controller: AppBundle:People:view }
    requirements:
        steamID: '\d+'

editPerson:
    path:     /crew/{steamID}/edit
    methods:  [GET]
    defaults: { _controller: AppBundle:People:edit }
    requirements:
        steamID: '\d+'

editPersonPost:
    path:     /crew/{steamID}/edit
    methods:  [POST]
    defaults: { _controller: AppBundle:People:post }
    requirements:
        steamID: '\d+'

#
# REFERRERS
#

referrers:
    path:     /referrers
    defaults: { _controller: AppBundle:Referrer:index }

#
# AUDIT LOG
#

auditLog:
    path:     /audit-log
    defaults: { _controller: AppBundle:AuditLog:index }

#
# LAUNCHER
#

countdown:
    path:     /countdown
    defaults: { _controller: AppBundle:Launcher:countdown }

stream:
    path:     /stream
    defaults: { _controller: AppBundle:Launcher:stream }

finished:
    path:     /finished
    defaults: { _controller: FrameworkBundle:Template:template, template: 'finished.html.twig' }

#
# STATIC PAGES
#

privacy:
    path:     /privacy
    defaults: { _controller: FrameworkBundle:Template:template, template: 'privacy.html.twig' }

#
# CONFIG
#

config:
    path:     /config
    methods:  [GET]
    defaults: { _controller: AppBundle:Config:index }

configPost:
    path:     /config
    methods:  [POST]
    defaults: { _controller: AppBundle:Config:post }

#
# /V/3
#

obsOverlay:
    path:     /obs/overlay
    defaults: { _controller: AppBundle:Obs:overlay }

obsGetSentiment:
    path:     /obs/sentiment
    defaults: { _controller: AppBundle:Obs:getSentiment }

votingPopout:
    path:     /vote
    defaults: { _controller: AppBundle:Sentiment:vote }

sentimentAnalysis:
    path:     /sentiment-analysis
    methods:  [GET]
    defaults: { _controller: AppBundle:Sentiment:index }

sentimentAnalysisPost:
    path:     /sentiment-analysis
    methods:  [POST]
    defaults: { _controller: AppBundle:Sentiment:post }

chatMonitoringPanel:
    path:     /twitch-chat
    defaults: { _controller: AppBundle:ChatMonitoringPanel:index }

updateSupervisorState:
    path:     /twitch-chat/supervisor
    methods:  [POST]
    defaults: { _controller: AppBundle:ChatMonitoringPanel:updateSupervisorState }
