# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory: ~

        steamauth:
            id: steam.user_provider

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~

            provider: steamauth
            steam:
                default_route: index
            remember_me:
                secret: '%secret%'

            logout_on_user_change: true

            logout:
                path: /logout
                target: /

    access_control:
        - { path: ^/config, roles: ROLE_EDIT_CONFIG }
        - { path: ^/sentiment-analysis, roles: ROLE_EDIT_CONFIG }
        - { path: ^/news/add, roles: ROLE_NEWS_MANAGE }
        - { path: ^/news/delete, roles: ROLE_NEWS_MANAGE }
        - { path: ^/vidya-in-2017, roles: [CONDITIONALLY_PUBLIC, ROLE_ADD_VIDEO_GAME], methods: [GET] }
        - { path: ^/vidya-in-2017, roles: ROLE_ADD_VIDEO_GAME, methods: [POST] }
        - { path: ^/crew/.+/edit, roles: ROLE_PROFILE_EDIT_DETAILS }
        - { path: ^/crew/new, roles: ROLE_ADD_USER }
        - { path: ^/crew/search, roles: ROLE_ADD_USER }
        - { path: ^/crew, roles: ROLE_PROFILE_VIEW }
        - { path: ^/awards/manage, roles: ROLE_AWARDS_FEEDBACK, methods: [GET] }
        - { path: ^/awards/manage, roles: ROLE_AWARDS_EDIT, methods: [POST] }
        - { path: ^/awards, roles: [CONDITIONALLY_PUBLIC, ROLE_AWARDS_EDIT] }
        - { path: ^/nominees, roles: ROLE_NOMINATIONS_VIEW, methods: [GET] }
        - { path: ^/nominees, roles: ROLE_NOMINATIONS_EDIT, methods: [POST] }
        - { path: ^/tasks, roles: ROLE_TASKS_VIEW }
        - { path: ^/vote/code, roles: ROLE_VOTING_VIEW }
        - { path: ^/vote, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_VIEW] }
        - { path: ^/winners, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_RESULTS], methods: [GET] }
        - { path: ^/winners, roles: ROLE_AWARDS_EDIT, methods: [POST] }
        - { path: ^/results, roles: [CONDITIONALLY_PUBLIC, ROLE_VOTING_RESULTS] }
        - { path: ^/referrers, roles: ROLE_REFERRERS_VIEW }
        - { path: ^/audit-log, roles: ROLE_AUDIT_LOG_VIEW }
        - { path: ^/countdown, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/stream, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/finished, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/credits, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/videos, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/soundtrack, roles: [CONDITIONALLY_PUBLIC, ROLE_VIEW_UNFINISHED_PAGES] }
        - { path: ^/lootboxes, roles: ROLE_ITEMS_MANAGE }
        - { path: ^/adverts, roles: ROLE_ADVERTS_MANAGE }


